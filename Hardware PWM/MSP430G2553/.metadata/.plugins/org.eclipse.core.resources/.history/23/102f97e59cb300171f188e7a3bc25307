#include <msp430.h>

#include <msp430g2553.h>

int count = 0;

int main(void){
    WDTCTL = WDTPW | WDTHOLD;   // stop watchdog timer

    P1SEL |= BIT6;         // sets port mux for timer output
    P1SEL2 = 0;
    P1DIR |= BIT0;
    P1DIR |= BIT6;    // Sets pin 1.0 and pin 9.7 as an output
    P1OUT &= 0;    // Sets pull up to VCC
    P1DIR &= ~BIT3;   // sets pin 1.1 as an input
    P1REN |= BIT3;    // Enables pull up resistor on P1.1
    P1OUT |= BIT3;    // Sets pull up to VCC
    /* INTERRUPT INIT */
    P1IE |= BIT3;
    P1IES |= BIT3;
    P1IFG &= ~BIT3;
    TA0CTL= (MC_1  + TASSEL_2);            //up timer, Aclk
    TA0CCTL1 = (OUTMOD_7);
    TA0CCR0= 1000-1;                           // sets maximum timer value
    TA0CCR1= 500;
    _BIS_SR(LPM0_bits + GIE);                  // Enter LPM0 w/ interrupt
}
#pragma vector=PORT1_VECTOR
__interrupt void Port_1(void)
{
    unsigned int i;
   if(TA0CCR1 > 1000){  //Check if 100% Duty Cycle
       TA0CCR1 = 0; //Reset CCR1
   }
   else{
       TA0CCR1 += 100; //Increment CCR1

   }

   for(i=0;i<10000;i++);                //Delay
   P1IFG &= ~BIT3;                     // P1.3 IFG cleared



}
